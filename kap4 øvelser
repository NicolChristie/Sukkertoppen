//opg1
// =
// console.log(2 == 2); = true
// console.log(2 == '2');  =true
// // !=
// console.log(3 != 2); =false
// console.log('hello' != 'Hello'); =true
// //===
// console.log(2 === 2); =true
// console.log(2 === '2'); =false
// // !==
// console.log(2 !== '2'); =true
// console.log(2 !== 2);=false

//opg 2
// function setup() {
//     createCanvas(400, 400);
//     frameRate(5);
//     }
//     function draw() {
//         background(255); 
//         let circX =mouseX;
//         let circY = mouseY;
//         fill(0);
//         if (X<200) {
//         rect(175,150,50,100)
//         } else if (200,200,50){
//             circle(200,200,50)
//         }

        //opg3
        // console.log(2 == 2 && 2 == '2'); =true
        //console.log(2 == 2 && 2 == '2' && 2 === '2'); =false
        // console.log(2 == 2 && 2 == '2' || 2!=2); =true
        //console.log('hello' != 'Hello' && 'hello' !== 'Hello'); =true
        // console.log('hello' != 'Hello' || 'hello' !== 'hello' && 'hello' !== 'heLLo'); =true
        //console.log(2 === 2 || 2!=3 ); =true
        //console.log(2 === 2 || 2!='2' && (true || false)); =true

        //opg 4
         // function setup() { 
          //   createCanvas(600, 400);
          // } 
          
          // function draw() { 
          //   background(220); //makes the background gray
          //   fill(255,0,0); //readys the next shapes to be red
          //   noStroke(); //determines that the next shapes will not have an outline
          //   if (mouseX < width/3) { //if the mouses x coordinates is lower that a third of the screen then do the if statement (so when the mouse is on the left third of the screen)
          //     rect(0, 0, width/3, height); //make a rectangle, starting from the top left corner, it is a third of the screen wide and goes all the way down to the bottom
          //   }
          //   else if (mouseX <= width*2/3) { //if the mouse x coordinates is s,aller than the 2/3rd mark on the x coordinate, but also larger than the 1/3rd mark, do this fucntion
          //     rect(width/3, 0, width/3, height); //make a rectangle that starts 1/3rd of the way across the screen, is a third of the screen wide and also goes all the way down the screen
          //   }
          //   else { //if it does not fulfil the last to equations then do this function (is not smaller than 1/3rd of the width of the screen, nor smaller than 2/3rds)
          //     rect(width*2/3, 0, width/3, height); //male a rectangle that starts 2/3rd of the way across the screen, is 1/3rd of the screen wide and goes all the way down
          //   }
          // }
                            //width and height are variables that use the background code in the setup to deterine its number, width is the amount of pixels wide the screen is and height is the amount of pixels tall the background is
            
        //opg 9
//let x = 100; //creates a variable called 'X' and sets the inital value at 200
//let y = 100; //creates a variable called 'Y' and sets the inital value at 100
// function setup() {
//     createCanvas(512, 512); //creates a background canvas with the size of 400x400
//     fill(255,0,0) //determines that all elements after this will be filled with red
//}

// function draw() {
//  if (keyIsDown(LEFT_ARROW)) { //KeyIsDown is an inbuilt argument that checks if a certain key is down on the keyboard,in this instance it is the left arrow key
//     x -= 5; //reduces the x variable by 5
//   }

//   if (keyIsDown(RIGHT_ARROW)) { //this checks if the right arrow key is down 
//     x += 5;//increases the x variable by 5
//   }

//   if (keyIsDown(UP_ARROW)) { //this checks if the right arrow is down
//     y -= 5; //decreases the y variable by 5
//   }

//   if (keyIsDown(DOWN_ARROW)) { //checks if the down arrow on the keybaord is pressed
//     y += 5; //increases the y variable by 5
//   }
//   clear() //this clears the background of any old elements, this way we can make the illusion that the circle is moving, even thought ever frameit is creating a new circle
//   //on tge background, with clear() clearing the old circles behind it
//   circle(x, y,50) //every frame creating a circle at the x and y coordinates of the respective variables, it has a diametere of 50
// }

  
        // opg 10
// let rectX = 20
// let rectY = 10
// let circX = 200
// let circY = 200
// let che1X = 20
// let che2X = 60
// let che1Y = 300
// let che2Y = 180
// let PoiRec = 0
// let PoiCirc = 0
//         function setup() {
//             createCanvas(400, 400);
//               rectX = random(20,380)
//               rectY = random(20,380)
//               circX = random(20,380)
//               circY = random(20,380)
//               che1X = random(20,380)
//               che2X = random(20,380)
//               che1Y = random(20,380)
//               che2Y = random(20,380) 
//           }
        
//           function draw() {
//             background(250);
//             fill(0)
//             circle(circX,circY,20);
//             fill(244)  
//             circle(che1X, che1Y, 20)
//             circle(che2X, che2Y, 20)
//             rect(rectX,rectY,20,40);
//             moving();
//             //opg12
//             cheeseCollection();
//             borderControl();
//             textController();
//             }
//     function moving(){
//       if (keyIsDown(LEFT_ARROW)) {
//         circX -= 5;
//         console.log("hit")
//       }
    
//       if (keyIsDown(RIGHT_ARROW)) {
//         circX += 5;
//       }
    
//       if (keyIsDown(UP_ARROW)) {
//         circY -= 5;
//       }
    
//       if (keyIsDown(DOWN_ARROW)) {
//         circY += 5;
//       }
//         //opg11
//         if (keyIsDown(65)) {
//             rectX -= 5;
//             console.log("key is down");
//           }
        
//           if (keyIsDown(68)) {
//             rectX += 5;
//           }
        
//           if (keyIsDown(87)) {
//             rectY -= 5;
//           }
        
//           if (keyIsDown(83)) {
//             rectY += 5;
//     }
//     }
//     function cheeseCollection(){
//       if(abs(che1X - rectX) <= 10 && abs(che1Y - rectY) <= 40){
//         che1X = random(20,380)
//         che1Y = random(20,380)
//         PoiRec++
//     } else if(abs(che1X - circX) <= 20 && abs(che1Y - circY) <= 10){
//         che1X = random(20,380)
//         che1Y = random(20,380)
//         PoiCirc++
//     } else if(abs(che2X - rectX) <= 10 && abs(che2Y - rectY) <= 40){
//         che2X = random(20,380)
//         che2Y = random(20,380)
//         PoiRec++
//     } else if(abs(che2X - circX) <= 20 && abs(che2Y - circY) <= 10){
//         che2X = random(20,380)
//         che2Y = random(20,380)
//         PoiCirc++
//     }
//     }
//     function borderControl(){
//       if (0 > circX){
//         circX = circX + 20
//       }else if (circX > width){
//       circX = circX - 20
//       } else if (circY < 0) {
//         circY = circY + 20
//       }else if (circY > height) {
//         circY = circY - 20
//       }
//       if (0 > rectX){
//         rectX = rectX + 20
//       }else if (rectX > width){
//       rectX = rectX - 20
//       } else if (rectY < 0) {
//         rectY = rectY + 40
//       }else if (rectY > (height-40)) {
//         rectY = rectY - 20
//       }
//     }
//     function textController(){
//       fill(0);
//       text("Circle Points:" + PoiCirc,20,10);
//       text("Rectangle Points:" + PoiRec,280,10);
//     }
//         //opg13
// let cookieX = 0;
// let cookieY = 0;
//         function setup() {
//             createCanvas(400,400);
//             cookieX = random(20,380)
//             cookieY = random(20,380)
//         }
//         function draw() {
//             circle(cookieX,cookieY,20)

//         }
//         function mouseClicked(){
//           if(abs(cookieX - mouseX) <= 10 && abs(cookieY - mouseY) <= 20){
//             cookieX = random(20,380)
//             cookieY = random(20,380)
//             background(255)
//           }
//         }
